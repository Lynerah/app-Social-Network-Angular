// Custom Theming for Angular Material
@use '@angular/material' as mat;

// Plus imports for other components in your app.
@import '@angular/material/theming';

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
$my-theme-primary: mat.define-palette(mat.$teal-palette, 600, 200, 800);
$my-theme-accent: mat.define-palette(mat.$lime-palette, A200, A100, A700);

// The warn palette is optional (defaults to red).
$my-theme-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography"
$my-theme: mat.define-light-theme((color: (primary: $my-theme-primary,
                accent: $my-theme-accent,
                warn: $my-theme-warn,
            )));

// Define a dark theme

$dark-primary: mat.define-palette(mat.$orange-palette, 900);
$dark-accent: mat.define-palette(mat.$blue-grey-palette, A400);
$dark-warn: mat.define-palette(mat.$pink-palette);

$dark-theme: mat.define-dark-theme((color: (primary: $dark-primary,
                accent: $dark-accent,
                warn: $dark-warn,

            )));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.

.darkMode {
    @include mat.core-color($dark-theme);
    @include mat.all-component-colors($dark-theme);
    @include mat.button-color($dark-theme);
}

@include angular-material-theme($my-theme);
@include mat.all-component-themes($my-theme);